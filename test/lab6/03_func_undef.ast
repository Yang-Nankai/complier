program
    FunDefStmt	function name: @func	type: i32(i32, i32, i32)
        DeclStmt
            Id	name: %t0	scope: 1	type: i32
        DeclStmt
            Id	name: %t2	scope: 1	type: i32
        DeclStmt
            Id	name: %t4	scope: 1	type: i32
        CompoundStmt
            ReturnStmt
                BinaryExpr	op: add	type: i32
                    BinaryExpr	op: add	type: i32
                        Id	name: %t0	scope: 1	type: i32
                        Id	name: %t2	scope: 1	type: i32
                    Id	name: %t4	scope: 1	type: i32
    FunDefStmt	function name: @main	type: i32()
        CompoundStmt
            ReturnStmt
                CallExpr	function name: @func	scope: 0
                    IntegerLiteral	value: 1	type: i32
define i32 @func() {
B12:
  %t15 = alloca i32, align 4
  %t14 = alloca i32, align 4
  %t13 = alloca i32, align 4
  store i32 %t0, i32* %t13, align 4
  store i32 %t2, i32* %t14, align 4
  store i32 %t4, i32* %t15, align 4
  %t6 = load i32, i32* %t13, align 4
  %t7 = load i32, i32* %t14, align 4
  %t8 = add i32 %t6, %t7
  %t9 = load i32, i32* %t15, align 4
  %t10 = add i32 %t8, %t9
  ret i32 %t10
}
define i32 @main() {
B16:
  %t11 = call i32 @func(i32 1)
  ret i32 %t11
}
