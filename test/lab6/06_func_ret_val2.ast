program
    FunDefStmt	function name: @func	type: i32(i32, i32)
        DeclStmt
            Id	name: %t0	scope: 1	type: i32
        DeclStmt
            Id	name: %t2	scope: 1	type: i32
        CompoundStmt
            DeclStmt
                Id	name: @sum	scope: 2	type: i32
                BinaryExpr	op: add	type: i32
                    Id	name: %t0	scope: 1	type: i32
                    Id	name: %t2	scope: 1	type: i32
    FunDefStmt	function name: @main	type: i32()
        CompoundStmt
            ExprStmt
                CallExpr	function name: @func	scope: 0
                    IntegerLiteral	value: 1	type: i32
                    IntegerLiteral	value: 2	type: i32
            ReturnStmt
                IntegerLiteral	value: 0	type: i32
define i32 @func() {
B9:
  %t12 = alloca i32, align 4
  %t11 = alloca i32, align 4
  %t10 = alloca i32, align 4
  store i32 %t0, i32* %t10, align 4
  store i32 %t2, i32* %t11, align 4
  %t4 = load i32, i32* %t10, align 4
  %t5 = load i32, i32* %t11, align 4
  %t6 = add i32 %t4, %t5
  store i32 %t6, i32* %t12, align 4
}
define i32 @main() {
B13:
  %t8 = call i32 @func(i32 1, i32 2)
  ret i32 0
}
